<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>ru.manannikov</groupId>
	<artifactId>bootcupscoffeebar</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>Bootcups</name>
	<description>Веб приложение ремесленной кофейни Bootcups</description>
<!-- Используемые версии компонентов -->
	<properties>
		<java.version>22</java.version>
		<org.projectlombok.version>1.18.34</org.projectlombok.version>
		<liquibase.version>4.28.0</liquibase.version>
		<postgresql.version>42.7.3</postgresql.version>
		<thymeleaf.springsecurity6.version>3.1.2.RELEASE</thymeleaf.springsecurity6.version>

		<telegrambots.version>7.9.1</telegrambots.version>

		<dockerfile-maven.version>1.4.13</dockerfile-maven.version>
		<docker.image.prefix>bootcupscoffeebar</docker.image.prefix>
	</properties>

	<dependencies>
<!--	База данных -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
			<version>${postgresql.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>${liquibase.version}</version>
		</dependency>
<!--	Шаблонизатор -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
<!--	Spring Boot	-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
<!--	Препроцессор аннотаций	-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${org.projectlombok.version}</version>
			<optional>true</optional>
		</dependency>
<!--	Security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity6</artifactId>
			<version>${thymeleaf.springsecurity6.version}</version>
		</dependency>
<!--	Telegram bot-->
<!--	Позволяет зарегистрировать бота и настроить его логику  -->
		<dependency>
			<groupId>org.telegram</groupId>
			<artifactId>telegrambots-longpolling</artifactId>
			<version>${telegrambots.version}</version>
		</dependency>
<!--	Позволяет отправлять сообщения на сервер Telegram от имени бота  -->
		<dependency>
			<groupId>org.telegram</groupId>
			<artifactId>telegrambots-client</artifactId>
			<version>${telegrambots.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${org.projectlombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
<!--		docker плагин, используется для автоматической генерации образа при сборке приложения 	-->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile-maven.version}</version>
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<goal>build</goal>
							<!--							<goal>push</goal>-->
						</goals>
					</execution>
				</executions>
				<configuration>

					<repository>${docker.image.prefix}/${project.artifactId}</repository>
<!--				Указываем версию проекта -->
					<tag>${project.version}</tag>

					<buildArgs>
<!--					артифакт-версия, JAR_FILE -> переменная, которую плагин передаст команде docker build -build-arg name=value в виде пары ключ-значение	-->
						<JAR_FILE>
							target/${project.build.finalName}.jar
						</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
